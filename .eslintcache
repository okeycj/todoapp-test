[{"C:\\Users\\achug\\Desktop\\test\\test\\src\\index.js":"1","C:\\Users\\achug\\Desktop\\test\\test\\src\\App.js":"2","C:\\Users\\achug\\Desktop\\test\\test\\src\\reportWebVitals.js":"3","C:\\Users\\achug\\Desktop\\test\\test\\src\\components\\Home.js":"4","C:\\Users\\achug\\Desktop\\test\\test\\src\\components\\Period.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":215,"mtime":1607426867482,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":26118,"mtime":1607426989304,"results":"10","hashOfConfig":"7"},{"size":489,"mtime":1607327579666,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ibe5q0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\achug\\Desktop\\test\\test\\src\\index.js",[],["24","25"],"C:\\Users\\achug\\Desktop\\test\\test\\src\\App.js",[],"C:\\Users\\achug\\Desktop\\test\\test\\src\\reportWebVitals.js",[],"C:\\Users\\achug\\Desktop\\test\\test\\src\\components\\Home.js",["26","27","28","29","30","31","32"],"import React, { useEffect, useState } from 'react';\r\nimport \"../App.css\";\r\n// import Period from './Period';\r\n\r\nfunction Home() {\r\n    const [ form, setForm ] = useState([])\r\n    const [ monday, setMonday ] = useState(false)\r\n    const [ tuesday, setTuesday ] = useState(false)\r\n    const [ wednesday, setWednesday ] = useState(false)\r\n    const [ thursday, setThursday ] = useState(false)\r\n    const [ friday, setFriday ] = useState(false)\r\n    const [ saturday, setSaturday ] = useState(false)\r\n    const [ sunday, setSunday ] = useState(false);\r\n    const [ period, setPeriod ] = useState('');\r\n    const [ duration, setDuration ] = useState('');\r\n    const [ localstore, setLocalstore ] = useState({});\r\n    const [ total_duration, setTotalduration ] = useState(0);\r\n\r\n    // let localstore\r\n    useEffect(() => {\r\n        if (localStorage.getItem('todos') == null) {\r\n            let todos = {'sunday': [], 'monday': [], 'tuesday': [], 'wednesday': [], 'thursday': [], 'friday': [], 'saturday': []}\r\n            localStorage.setItem('todos', JSON.stringify(todos))\r\n            setLocalstore(JSON.parse(localStorage.getItem('todos')))\r\n            totalDuration()\r\n        }\r\n        setLocalstore(JSON.parse(localStorage.getItem('todos')))\r\n        totalDuration()\r\n    }, [])\r\n    \r\n    // localstore = JSON.parse(localStorage.getItem('todos'));\r\n\r\n    const addForm = (day) => {\r\n        const document = [...form, {index: Math.random(), day: day}]\r\n        setForm(document)\r\n    }\r\n    \r\n    const deleteForm = (f) => {\r\n      const array = form.filter((fm) => fm.index !== f.index);\r\n      setForm(array)\r\n    }\r\n    \r\n    const handleMonday = () => {\r\n      const value = !monday\r\n      setMonday(value)\r\n    }\r\n    const handleTuesday = () => {\r\n      const value = !tuesday\r\n      setTuesday(value)\r\n    }\r\n    const handleWednesday = () => {\r\n      const value = !wednesday\r\n      setWednesday(value)\r\n    }\r\n    const handleThursday = () => {\r\n      const value = !thursday\r\n      setThursday(value)\r\n    }\r\n    const handleFriday = () => {\r\n      const value = !friday\r\n      setFriday(value)\r\n    }\r\n    const handleSaturday = () => {\r\n      const value = !saturday\r\n      setSaturday(value)\r\n    }\r\n    const handleSunday = () => {\r\n      const value = !sunday\r\n      setSunday(value)\r\n    }\r\n    const handlePeriod = (e) => {\r\n      const value = e.target.value\r\n      setPeriod(value)\r\n    }\r\n    const handleDuration = (e) => {\r\n      const value = e.target.value\r\n      setDuration(value)\r\n    }\r\n    const handleSubmit = (event, day) => {\r\n        if (event.key === 'Enter') {\r\n            let store = JSON.parse(localStorage.getItem('todos'))\r\n            if (store.hasOwnProperty(day)) {\r\n                let array = [...store[day], {index: Math.random(), period: period, duration: duration, notes: event.target.value}]\r\n                store[day] = array;\r\n                localStorage.setItem('todos', JSON.stringify(store))\r\n                setLocalstore(JSON.parse(localStorage.getItem('todos')))\r\n                totalDuration()\r\n            }\r\n            console.log(localstore)\r\n        }\r\n    }\r\n    const deleteTODO = (day, todo) => {\r\n        let store = JSON.parse(localStorage.getItem('todos'))\r\n        if (store.hasOwnProperty(day)) {\r\n            let array = store[day].filter((td) => td.index !== todo.index)\r\n            store[day] = array;\r\n            localStorage.setItem('todos', JSON.stringify(store))\r\n            setLocalstore(JSON.parse(localStorage.getItem('todos')))\r\n            totalDuration()\r\n        }\r\n        console.log(localstore)\r\n        \r\n    }\r\n    const totalDuration = () => {\r\n        let store = JSON.parse(localStorage.getItem('todos'))\r\n        let total_duration = 0;\r\n        for (const key in store) {\r\n            if (store.hasOwnProperty(key)) {\r\n                const s = store[key];\r\n                for (let index = 0; index < s.length; index++) {\r\n                    const d = s[index].duration;\r\n                    total_duration = total_duration+Number(d.split(' ')[0])\r\n                }\r\n            }\r\n        }\r\n        // console.log('total_duration',total_duration)\r\n        setTotalduration(total_duration)\r\n    }\r\n    return (\r\n        <div className='homepage'>\r\n            <div className='day'>\r\n                <input type='checkbox' id='day' onChange={handleMonday} /> <label htmlFor='day'>Monday</label>\r\n                {monday !== false && (\r\n                    <div>\r\n                    <p>Add a Period: <button onClick={() => addForm(\"monday\")}>+</button></p>\r\n                    {localstore.monday.length > 0 && (\r\n                        localstore.monday.map((to_do, i) => {\r\n                            return(\r\n                                <div className='todo'>\r\n                                    {i+1}. Period: \r\n                                    <select defaultValue={to_do.period} disabled onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select defaultValue={to_do.duration} disabled onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" disabled value={to_do.notes} /> <button onClick={() => deleteTODO('monday', to_do)}>-</button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    )}\r\n                    {form.length > 0 && (\r\n                        form.map((f,i) => {\r\n                            console.log(form)\r\n                            if (f.day === 'monday') {\r\n                                return(<div className='todo'>\r\n                                    {i + 1 + localstore.sunday.length}. Period: \r\n                                    <select onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" onKeyPress={(e) => handleSubmit(e, 'monday')} /><button onClick={() => deleteForm(f)}>-</button>\r\n                                </div>)\r\n                                \r\n                            }\r\n                        })\r\n                    )}\r\n                </div>\r\n                )}\r\n            </div>\r\n            <div className='day'>\r\n                <input type='checkbox' id='day1' onChange={handleTuesday} /> <label htmlFor='day1'>Tuesday</label>\r\n                {tuesday !== false && (\r\n                    <div>\r\n                    <p>Add a Period: <button onClick={() => addForm('tuesday')}>+</button></p>\r\n                    {localstore.tuesday.length > 0 && (\r\n                        localstore.tuesday.map((to_do,i) => {\r\n                            return(\r\n                                <div className='todo'>\r\n                                    {i+1}. Period: \r\n                                    <select defaultValue={to_do.period} disabled onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select defaultValue={to_do.duration} disabled onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" disabled value={to_do.notes} /> <button onClick={() => deleteTODO('tuesday', to_do)}>-</button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    )}\r\n                    {form.length > 0 && (\r\n                        form.map((f,i) => {\r\n                            console.log(form)\r\n                            if (f.day === 'tuesday') {\r\n                                return(<div className='todo'>\r\n                                    {i + 1 + localstore.tuesday.length}. Period: \r\n                                    <select onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" onKeyPress={(e) => handleSubmit(e, 'tuesday')} /> <button onClick={() => deleteForm(f)}>-</button>\r\n                                </div>)\r\n                            }\r\n                        })\r\n                    )}\r\n                </div>\r\n                )}\r\n            </div>\r\n            <div className='day'>\r\n                <input type='checkbox' id='day2' onChange={handleWednesday} /> <label htmlFor='day2'>Wednesday</label>\r\n                {wednesday !== false && (\r\n                    <div>\r\n                    <p>Add a Period: <button onClick={() => addForm('wednesday')}>+</button></p>\r\n                    {localstore.wednesday.length > 0 && (\r\n                        localstore.wednesday.map((to_do, i) => {\r\n                            return(\r\n                                <div className='todo'>\r\n                                    {i +1}. Period: \r\n                                    <select defaultValue={to_do.period} disabled onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select defaultValue={to_do.duration} disabled onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" disabled value={to_do.notes} /> <button onClick={() => deleteTODO('wednesday', to_do)}>-</button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    )}\r\n                    {form.length > 0 && (\r\n                        form.map((f, i) => {\r\n                            console.log(form)\r\n                            if (f.day === 'wednesday') {\r\n                                return(<div className='todo'>\r\n                                    {i + 1 + localstore.wednesday.length}. Period: \r\n                                    <select onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" onKeyPress={(e) => handleSubmit(e, 'wednesday')} /><button onClick={() => deleteForm(f)}>-</button>\r\n                                </div>)\r\n                            }\r\n                        })\r\n                    )}\r\n                </div>\r\n                )}\r\n            </div>\r\n            <div className='day'>\r\n                <input type='checkbox' id='day3' onChange={handleThursday} /> <label htmlFor='day3'>Thursday</label>\r\n                {thursday !== false && (\r\n                    <div>\r\n                    <p>Add a Period: <button onClick={() => addForm('thursday')}>+</button></p>\r\n                    {localstore.thursday.length > 0 && (\r\n                        localstore.thursday.map((to_do,i) => {\r\n                            return(\r\n                                <div className='todo'>\r\n                                    {i+1}. Period: \r\n                                    <select defaultValue={to_do.period} disabled onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select defaultValue={to_do.duration} disabled onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" disabled value={to_do.notes} /> <button onClick={() => deleteTODO('thursday', to_do)}>-</button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    )}\r\n                    {form.length > 0 && (\r\n                        form.map((f,i) => {\r\n                            console.log(form)\r\n                            if (f.day === 'thursday') {\r\n                                return(<div className='todo'>\r\n                                    {i + 1 + localstore.thursday.length}. Period: \r\n                                    <select onChange={(e) => {handlePeriod(e)}}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select onChange={(e) => {handleDuration(e)}}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" onKeyPress={(e) => handleSubmit(e, 'thursday')} /><button onClick={() => deleteForm(f)}>-</button>\r\n                                </div>)\r\n                                \r\n                            }\r\n                        })\r\n                    )}\r\n                </div>\r\n                )}\r\n            </div>\r\n            <div className='day'>\r\n                <input type='checkbox' id='day4' onChange={handleFriday} /> <label htmlFor='day4'>Friday</label>\r\n                {friday !== false && (\r\n                    <div>\r\n                    <p>Add a Period: <button onClick={() => addForm('friday')}>+</button></p>\r\n                    {localstore.friday.length > 0 && (\r\n                        localstore.friday.map((to_do, i) => {\r\n                            return(\r\n                                <div className='todo'>\r\n                                    {i+1}. Period: \r\n                                    <select defaultValue={to_do.period} disabled onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select defaultValue={to_do.duration} disabled onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" disabled value={to_do.notes} /> <button onClick={() => deleteTODO('friday', to_do)}>-</button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    )}\r\n                    {form.length > 0 && (\r\n                        form.map((f, i) => {\r\n                            console.log(form)\r\n                            if (f.day === 'friday') {\r\n                                return(<div className='todo'>\r\n                                    {i + 1 + localstore.friday.length}. Period: \r\n                                    <select onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" onKeyPress={(e) => handleSubmit(e, 'friday')} /><button onClick={() => deleteForm(f)}>-</button>\r\n                                </div>)\r\n                            }\r\n                        })\r\n                    )}\r\n                </div>\r\n                )}\r\n            </div>\r\n            <div className='day'>\r\n                <input type='checkbox' id='day5' onChange={handleSaturday} /> <label htmlFor='day5'>Saturday</label>\r\n                {saturday !== false && (\r\n                    <div>\r\n                    <p>Add a Period: <button onClick={() => addForm('saturday')}>+</button></p>\r\n                    {localstore.saturday.length > 0 && (\r\n                        localstore.saturday.map((to_do, i) => {\r\n                            return(\r\n                                <div className='todo'>\r\n                                    {i+1}. Period: \r\n                                    <select defaultValue={to_do.period} disabled onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select defaultValue={to_do.duration} disabled onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" disabled value={to_do.notes} /> <button onClick={() => deleteTODO('saturday', to_do)}>-</button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    )}\r\n                    {form.length > 0 && (\r\n                        form.map((f, i) => {\r\n                            console.log(form)\r\n                            if (f.day === 'saturday') {\r\n                                return(<div className='todo'>\r\n                                    {i + 1 + localstore.saturday.length}. Period: \r\n                                    <select onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" onKeyPress={(e) => handleSubmit(e, 'saturday')} /><button onClick={() => deleteForm(f)}>-</button>\r\n                                </div>)\r\n                            }\r\n                        })\r\n                    )}\r\n                </div>\r\n                )}\r\n            </div>\r\n            <div className='day'>\r\n                <input type='checkbox' id='day6' onChange={handleSunday} /> <label htmlFor='day6'>Sunday</label>\r\n                {sunday !== false && (\r\n                    <div>\r\n                    <p>Add a Period: <button onClick={() => addForm('sunday')}>+</button></p>\r\n                    {localstore.sunday.length > 0 && (\r\n                        localstore.sunday.map((to_do, i) => {\r\n                            return(\r\n                                <div className='todo'>\r\n                                    {i +1}. Period: \r\n                                    <select defaultValue={to_do.period} disabled onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select defaultValue={to_do.duration} disabled onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" disabled value={to_do.notes} /> <button onClick={() => deleteTODO('sunday', to_do)}>-</button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    )}\r\n                    {form.length > 0 && (\r\n                        form.map((f, i) => {\r\n                            console.log(form)\r\n                            if (f.day === 'sunday') {\r\n                                return(<div className='todo'>\r\n                                    {i + 1 + localstore.sunday.length}. Period: \r\n                                    <select onChange={(e) => handlePeriod(e)}>\r\n                                        <option>Choose Period</option>\r\n                                        <option>AM</option>\r\n                                        <option>PM</option>\r\n                                    </select>\r\n                                    Duration:\r\n                                    <select onChange={(e) => handleDuration(e)}>\r\n                                        <option>Choose Duration</option>\r\n                                        <option>30 minute</option>\r\n                                        <option>60 minute</option>\r\n                                    </select>\r\n                                    Notes: <input type=\"text\" onKeyPress={(e) => handleSubmit(e, 'sunday')} /><button onClick={() => deleteForm(f)}>-</button>\r\n                                </div>)\r\n                            }\r\n                        })\r\n                    )}\r\n                </div>\r\n                )}\r\n            </div>\r\n            <div>\r\n                {total_duration >= 0 && (\r\n                    `${total_duration/1440 >= 1 ? Math.floor(total_duration/1440) : 0}\r\n                    day(s)\r\n                    ${total_duration/60 >= 1 ? Math.floor(total_duration / 60) : 0} \r\n                    hour(s) and \r\n                    ${total_duration % 60 !== 0 ? total_duration % 60 : 0} \r\n                    minute(s)`\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\achug\\Desktop\\test\\test\\src\\components\\Period.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":148,"column":40,"nodeType":"39","messageId":"40","endLine":148,"endColumn":42},{"ruleId":"37","severity":1,"message":"38","line":200,"column":40,"nodeType":"39","messageId":"40","endLine":200,"endColumn":42},{"ruleId":"37","severity":1,"message":"38","line":251,"column":41,"nodeType":"39","messageId":"40","endLine":251,"endColumn":43},{"ruleId":"37","severity":1,"message":"38","line":302,"column":40,"nodeType":"39","messageId":"40","endLine":302,"endColumn":42},{"ruleId":"37","severity":1,"message":"38","line":354,"column":41,"nodeType":"39","messageId":"40","endLine":354,"endColumn":43},{"ruleId":"37","severity":1,"message":"38","line":405,"column":41,"nodeType":"39","messageId":"40","endLine":405,"endColumn":43},{"ruleId":"37","severity":1,"message":"38","line":456,"column":41,"nodeType":"39","messageId":"40","endLine":456,"endColumn":43},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]